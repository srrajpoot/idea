c
render json: { errors: @like.errors.full_messages }, status: :unprocessable_entity
n
@like.save
n
 @like = Like.new(like_params)
like_params
c
@like = Like.new(like_params)
c
@like.save
@like
@like = Like.new(like_params)
c
@like.save
n
Like.new(like_params)
c
Like.new(like_params)
c
@like.save
n
@like = Like.new(like_params)
c
@like.save
n
@like = Like.new(like_params)
c
@like.save
n
@like = Like.new(like_params)
c
@like.save
n
@like = Like.new(like_params)
Like.new(like_params)
like_params
c
@like
Like.new(like_params)
like_params
c
@like.errors
(byebug) @like.errors.full_messages
c
@like.save
@like.save?
@like.save
n
@like = Like.new(like_params)
Like.new(like_params)
c
@like.save
@like = Like.new(like_params)
n
          params.require(:like).permit(:like_by_id, :likeable_type, :likeable_id)
c
render json: @like.errors, status: :unprocessable_entity
render json: @like, status: :ok
n
@like.save
n
@like = Like.new(like_params)
Like.new(like_params)
like_params
c
@like
Like.new(like_params)
like_params
c
@like.save
Like.new(like_params)
@like.new
n
@like = Like.new(like_params)
like.new
like_params
c
n
render json: @like.errors, status: :unprocessable_entity
n
if @like.save
n
 @like = Like.new(like_params)
c
n
if @like.save
n
 @like = Like.new(like_params)
c
 @like = Like.new(like_params)
end
  belongs_to :post  # Ensure this association is correct and that Post model exists
  belongs_to :likeable, polymorphic: true
  belongs_to :like_by, class_name: "User", foreign_key: "like_by_id"
  self.table_name = :likes
class Like < ApplicationRecord
c
@like.save
n
like_params
@like = Like.new(like_params)
c
n
@like.save
n
@like = Like.new(like_params)
@like = Like.new(like_param
c
n
@like.save
@like
n
@like = Like.new(like_params)
c
n
@like.save
 @like.save
 @like
n
@like = Like.new(like_params)
like_params
c
@add_idea = AddIdea.find_by(id: params[:id])
c
n
render json: @add_idea, status: :ok
n
 @add_idea.present?
n
@add_idea = AddIdea.find_by(id: params[:id])
n
get "/add_ideas/#{idea_id}"
n
idea_id = JSON.parse(response.body)['id']
n
post '/add_ideas', params: valid_params
c
n
get "/add_ideas/#{add_idea.id}", params: { id: add_idea.id }
n
idea_id = JSON.parse(response.body)['id']
n
post '/add_ideas', params: valid_params
c
n
AddIdea.find_by(id: params[:id])
c
n
AddIdea.create(title: 'Example Title', idea_type: 'Example Type', account_id: 1)
n
c
n
@add_idea.present?
@add_idea.any?
n
AddIdea.all
c
expect(response).to have_http_status(:ok)
n
put "/add_ideas/#{AddIdea.last.id}", params: update_params
n
post '/add_ideas', params: valid_params
c
n
 post '/add_ideas', params: valid_params
c
n
post '/add_ideas', params: valid_params
c
valid_params
post '/add_ideas', params: valid_params
c
 post '/add_ideas', params: valid_params
c
post '/add_ideas', params: valid_params
c
 put "/add_ideas/#{add_idea.id}", params: update_params
n
post '/add_ideas', params: valid_params
st '/add_ideas', params: valid_params
c
params: update_params
put "/add_ideas/#{add_idea.id}", params: update_params
n
 post '/add_ideas', params: valid_params
c
n
c
put "/add_ideas/#{add_idea.id}", params: valid_params
n
post '/add_ideas', params: valid_params
c
add_idea = AddIdea.create(title: 'Example Title', idea_type: 'Example Type', account_id: 1)
 post '/add_ideas', params: valid_params
c
 expect(response).to have_http_status(:ok)
n
put "/add_ideas/#{add_idea.id}", params: { id: add_idea.id }
n
post '/add_ideas', params: valid_params
c
n
c
n
 put "/add_ideas/#{add_idea.id}", params: valid_params
n
 post '/add_ideas', params: valid_params
c
n
add_idea = AddIdea.create(title: 'Example Title', idea_type: 'Example Type', account_id: 1)
expect(response).to have_http_status(:ok)
n
put "/add_ideas/#{add_idea.id}", params: valid_params
n
add_idea = AddIdea.create(title: 'Example Title', idea_type: 'Example Type', account_id: 1)
c
n
c
n
AddIdea.find_by(id: params[:id])
n
c
idea_id = JSON.parse(response.body)['id']
JSON.parse(response.body)['id']
JSON.parse(response.body)
expect(response.body)
expect(response.body)['id']
expect(response.body)[''id]
expect(response.body)
 post '/add_ideas', params: valid_params
AddIdea.create(title: 'Example Title', idea_type: 'Example Type', account_id: 1)
n
 post '/add_ideas', params: valid_params
c
delete "/add_ideas/#{2}"
delete "/add_ideas/#{add_idea.id}", params: { 2}
delete "/add_ideas/#{add_idea.id}", params: { id: add_idea.id }
add_idea = AddIdea.create(title: 'Example Title', idea_type: 'Example Type', account_id: 1)
n
post '/add_ideas', params: valid_params
c
get "/add_ideas/#{add_idea.id}", params: { id: add_idea.id }
params: { id: add_idea.id }
add_idea.id
destroy "/add_ideas/#{add_idea.id}",params: { id: add_idea.id }
get "/add_ideas/#{add_idea.id}", params: { id: add_idea.id }
add_idea = AddIdea.create(title: 'Example Title', idea_type: 'Example Type', account_id: 1)
n
post '/add_ideas', params: valid_params
c
n
c
n
add_idea.id
id: add_idea.id 
